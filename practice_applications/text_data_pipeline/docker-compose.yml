services:
  flyway:
    image: flyway/flyway:11.3.3
    command: -configFiles=/flyway/conf/flyway.config -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    volumes:
      - ${PWD}/sql_versions:/flyway/sql
      - ${PWD}/docker-flyway.config:/flyway/conf/flyway.config
    depends_on:
      - postgres
    networks:
      - text_data_pipeline

  postgres:
    image: postgres
    restart: always
    ports:
    - "5432:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgresdb
    - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - text_data_pipeline

  kafka_broker:
    image: apache/kafka:latest
    container_name: kafka_broker
    ports:
      - "9092:29092"
    networks:
      - text_data_pipeline
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka_broker:9092,CONTROLLER://kafka_broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_broker:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka_broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
#    entrypoint: ["/bin/bash", "/scripts/kafka_entrypoint.sh"]
#    volumes:
#      - ./scripts:/scripts

  init-kafka:
    image: apache/kafka:latest
    container_name: kafka_topics_creator
    depends_on:
      - kafka_broker
    networks:
      - text_data_pipeline
    entrypoint: [ "bin/sh", "-c" ]
    command: |
      "
      cd /opt/kafka/bin/
      ./kafka-topics.sh --bootstrap-server kafka_broker:9092 --list

      echo -e 'Creating kafka topic(s)'
      ./kafka-topics.sh --bootstrap-server kafka_broker:9092 --create --if-not-exists --topic youtube-videos --replication-factor 1 --partitions 3

      echo -e 'Created the following topic(s):'
      ./kafka-topics.sh --bootstrap-server kafka_broker:9092 --list
      "

networks:
  text_data_pipeline:
    driver: bridge
